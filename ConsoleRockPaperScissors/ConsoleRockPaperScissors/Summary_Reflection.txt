使ったと思われる物 自作のSample群の名前で書きます。

標準出力 キー入力 inline関数 new クラスの使い方 
privateとデータメンバの制限 引き数とオブジェクト
コンストラクタ 継承 仮想関数 抽象クラス クラスの階層
デストラクタ オブジェクトの初期化や代入の練習

今回微妙だったのが、他のクラスのデータを別クラスで扱う場合の処理
一応納得する感じにはいったけど、理解が6~70％なので微妙。

class A{
	A(){}
}
class B{
	B(){}
	B(A*){}
}
class C{
A a1;
B b2;
C():b2(&a1){}
}
然り
class C{
A* a1;B* b2; 
	C(){
		a1 = new A();
		b2 = new B(a1);
	}
}
クラスオブジェクトを作ったならそこから、
コンストラクタを使って代入させるのが一般的らしい。　←以前のテトリスは、クラス間で渡さず全部引数で渡していたから、データへアクセスできた。まぁC言語でやってたし。あれも正攻法なのか？

MVCを意識してみたけども、まだ意味腐。
とりあえず、good Comment.txtの内容らしい

以前に作ったテトリスも一応描画以外の部分は変更加えてないから、
一応それっぽいとも取れるコメントだけども。
今回のわけてみた内容
M:関数群　データ群の集合 Playerやcpuなどをまとめた　Model
V:表示系　View
C:Mを組み合わせて扱う Control ConsoleRockPaperScissors
こんな感じでやってみたけど、どうよ？

Cについては、Controlを扱うConsoleRockPaperScissorsもあって、
なんていうかControlだけでいくね？ってなった。
	
でも階層を一段深くしてるから、別のテトリスとか持ってきて
ゲーム集風にも使えるんじゃね？とかも思ってみたり。
実態？　ControlクラスのmainLoop呼んで来てるだけ。

まぁよくわからん。

なんだろう。意外と書いてみたけども、分かってない部分が結構あった。
文法的にポインタの置く場所とか、正直理解して置いてないとかあった。
意外とリスナーさんに、ソレばれててワロタｗ

まぁnewとかC++からだからだし！！
                     ↓ここにつけるのに
クラス* C = new クラス();

        ↓ここにつけていく新たなスタイルb
クラス* C() = new クラス;

結論：	理解は浅いかなー。実際Ｃ＋＋で書いたのってたぶん16pazzle以来の２回目
		理解度は全部ひっくるめて50%位だと思われ

